<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>LoveConnect ‚Äì Home</title>
  <link rel="stylesheet" href="/css/styles.css"/>
  <style>
    .search-section {
      display: flex;
      gap: 1rem;
      margin: 2rem 0 1.5rem 0;
    }

    .search-section input {
      flex: 1;
      padding: 0.6rem;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 1rem;
    }

    .profiles {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .profile-card {
      background: #f9f9f9;
      border-radius: 12px;
      padding: 1.2rem;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
      text-align: center;
    }

    .profile-card h3 {
      margin: 0;
      color: #1d3557;
    }

    .profile-card p {
      margin: 0.3rem 0;
      color: #555;
    }

    form {
      margin: 0;
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <h1>Find some friends ‚ù§Ô∏è</h1>
      <div class="nav-buttons">
        <a href="#" id="logoutBtn" ><button>Logout</button></a>
  <a href="/user"><button class="secondary">My Page</button></a>
</div>

    </header>

    <div class="search-section">
      <form method="GET" action="/search" style="display: flex; width: 100%;">
        <input type="text" name="keyword" placeholder="Search profiles..." required />
        <button type="submit">Search</button>
      </form>
    </div>
    <div class="profiles">
      <% if (forms.length === 0) { %>
          <p>No profiles found.</p>
        <% } %>
        <% forms.forEach(form => { %>
          <div class="profile-card">
            <h3><%= form.name %>, <%= form.age %></h3>
            <p><strong>City:</strong> <%= form.city %></p>
            <p><strong>Gender:</strong> <%= form.gender %></p>
            <p><em><%= form.bio %></em></p>
            <%const inviteSent = invites.some(invite => (invite.sender_id === userId) || (invite.receiver_id === userId)); %>

            <form class="invite-form" data-user-id="<%= form.user_id %>">
              <input type="hidden" name="to_user_id" value="<%= form.user_id %>" />
              <button type="submit" <%= inviteSent ? "disabled" : "" %>>
                <%= inviteSent ? "‚úÖ Invite Sent" : "üì® Send Invite" %>
              </button>
          </form>
        </div>
      <% }) %>
    </div>
  </div>
</body>
</html>
<script>
  document.querySelectorAll(".invite-form").forEach(form => {
    form.addEventListener("submit", async function (event) {
      event.preventDefault(); // prevent redirect

      const toUserId = form.dataset.userId;
      const button = form.querySelector("button");

      try {
        const res = await fetch(`/api/invite/${toUserId}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ to_user_id: toUserId })
        });

        const data = await res.json();
        if (res.ok) {
          button.textContent = "‚úÖ Invite Sent";
          button.disabled = true;
        } else {
          alert("Error: " + data.message);
        }
      } catch (err) {
        console.error("Request failed:", err);
        alert("Something went wrong.");
      }
    });
  });
  const logoutBtn = document.querySelector('#logoutBtn');

logoutBtn.addEventListener('click', async (e) => {
  e.preventDefault();

  try {
    const res = await fetch("/api/user/logout", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      credentials: "include",
    });

    if (res.ok) {
      window.location.href = "/";
    } else {
      const data = await res.json();
      alert(data.message || "Logout error");
    }
  } catch (err) {
    console.error("Logout failed:", err);
    alert("An unexpected error occurred");
  }
});

</script>
